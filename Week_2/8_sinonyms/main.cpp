/*
 * –î–≤–∞ —Å–ª–æ–≤–∞ –Ω–∞–∑—ã–≤—ã—é—Ç—Å—è —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –µ—Å–ª–∏ –æ–Ω–∏ –∏–º–µ—é—Ç –ø–æ—Ö–æ–∂–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è. – –µ–∞–ª–∏–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ
 * –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —Å–ª–æ–≤–∞—Ä—ë–º —Å–∏–Ω–æ–Ω–∏–º–æ–≤:
 * ADD word1 word2 - –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ª–æ–≤–∞—Ä—å –ø–∞—Ä—É —Å–∏–Ω–æ–Ω–∏–º–æ–≤ (word1, word2)
 * COUNT word - —É–∑–Ω–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ —Å–ª–æ–≤–∞ word
 * –°HECK word1 word2 - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è—é—Ç—Å—è –ª–∏ —Å–ª–æ–≤–∞ word1 –∏ word2 —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏. –°–ª–æ–≤–∞ word1 –∏ word2
 * —Å—á–∏—Ç–∞—é—Ç—Å—è —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏, –µ—Å–ª–∏ —Å—Ä–µ–¥–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ ADD –±—ã–ª —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å ADD word1 word2 –∏–ª–∏
 * ADD word2 word1
 *
 * –§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞
 * –°–Ω–∞—á–∞–ª–∞ –≤–≤–æ–¥–∏—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ Q, –∑–∞—Ç–µ–º Q —Å—Ç—Ä–æ–∫ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –∑–∞–ø—Ä–æ—Å–æ–≤. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ
 * –≤ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å—É CHECK –∏ ADD —Å–ª–æ–≤–∞ word1 –∏ word2 —Ä–∞–∑–ª–∏—á–Ω—ã. –í—Å–µ —Å–ª–æ–≤–∞ —Å–æ—Å—Ç–æ—è—Ç –ª–∏—à—å –∏–∑ –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö
 * –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤ –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏—è.
 *
 * –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞
 * –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –≤—ã–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–µ–≥–æ:
 * - –í –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å COUNT word –≤—ã–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ —Å–ª–æ–≤–∞ word
 * - –í –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å CHECK word1 word2 –≤—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É YES, –µ—Å–ª–∏ word1 –∏ word2 —è–≤–ª—è—é—Ç—Å—è —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏, –∏
 * NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
 *
 */
#include <iostream>
#include <map>
#include <set>
#include <string>

using namespace std;

int main()
{
    int q;
    cin >> q;
    map<string, set<string>> m;

    string operation_code, word1, word2;
    for(int i = 0; i < q; ++i){
        cin >> operation_code;
        if(operation_code == "COUNT"){
            cin >> word1;
            unsigned int count = m[word1].size();
            cout << count << endl;
        }else if(operation_code == "ADD"){
            cin >> word1 >> word2;
            m[word1].insert(word2);
            m[word2].insert(word1);
        }else if(operation_code == "CHECK"){
            cin >> word1 >> word2;
            if(m[word1].count(word2) > 0 || m[word2].count(word1) > 0){
                cout << "YES" << endl;
            }else{
                cout << "NO" << endl;
            }
        }
    }

    return 0;
}
